from PyQt6.QtWidgets import QMainWindow, QMessageBox, QPushButton, QWidget
from PyQt6.QtCore import pyqtSlot, QSettings, Qt
from .model_handler import ModelHandler
from .video_processor import VideoProcessor
from src.yolo.yolo_detector import YOLODetector
from src.detection.face_detection import FaceDetector
from src.detection.pose_detection import PoseDetector
from src.detection.siz_detection import SIZDetector
from .ui_layout import MainLayout
from utils.logger import AppLogger
from PyQt6.QtCore import QSettings

class MainWindow(QMainWindow):
    def __init__(self):
        super().__init__()
        self._settings = QSettings("MyCompany", "SIZDetector")
        self._dark_mode = False
        self.logger = AppLogger.get_logger()
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
        self.model_handler = ModelHandler(self)
        self._init_ui()  # –°–Ω–∞—á–∞–ª–∞ UI
        self._init_detectors()
        self._setup_connections()
        self._init_status_vars()
        self._load_initial_models()
        
        # –ü—Ä–∏–º–µ–Ω—è–µ–º —Ç–µ–º—É –≤ –∫–æ–Ω—Ü–µ
        self._load_theme_settings()

    def _load_theme_settings(self):
        """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–µ–º—ã –∏ –ø—Ä–∏–º–µ–Ω—è–µ—Ç –∏—Ö"""
        self._dark_mode = self._settings.value("dark_mode", False, type=bool)
        self._apply_theme(self._dark_mode)
        self._update_theme_button()

    def _update_theme_button(self):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç –∏–∫–æ–Ω–∫—É –∫–Ω–æ–ø–∫–∏ —Ç–µ–º—ã"""
        self._theme_btn.setText("‚òÄÔ∏è" if self._dark_mode else "üåô")

    def _init_status_vars(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å—Ç–∞—Ç—É—Å–∞"""
        self.current_model = None
        self.current_siz_status = None
        self.processing_active = False
        self.statusBar().showMessage("–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å –∏ –Ω–∞–∂–º–∏—Ç–µ Start")

    def _init_ui(self):
        self.setWindowTitle("–°–∏—Å—Ç–µ–º–∞ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è –°–ò–ó")
        self.setGeometry(100, 100, 800, 600)
        
        # –°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–µ–º main_layout
        self.main_layout = MainLayout(self)
        self.setCentralWidget(self.main_layout)
        
        # –ó–∞—Ç–µ–º —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º model_handler
        self.main_layout.set_model_handler(self.model_handler)
        
        # –ö–Ω–æ–ø–∫–∞ —Ç–µ–º—ã
        self._theme_btn = QPushButton()
        self._theme_btn.setProperty("class", "theme-toggle")
        self._theme_btn.clicked.connect(self._toggle_theme)
        self.statusBar().addPermanentWidget(self._theme_btn)

    def _init_detectors(self):
        self.yolo = YOLODetector()
        self.pose = PoseDetector()
        self.face = FaceDetector()
        self.siz = SIZDetector()
        
        self.video_processor = VideoProcessor()
        self.video_processor.set_detectors(self.yolo, self.face, self.pose, self.siz)
        
        self.model_handler = ModelHandler(self)

    def _update_theme_btn_icon(self):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç –∏–∫–æ–Ω–∫—É –∫–Ω–æ–ø–∫–∏ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å —Ç–µ–∫—É—â–µ–π —Ç–µ–º–æ–π"""
        self.theme_btn.setText("‚òÄÔ∏è" if self.dark_mode else "üåô")

    def _toggle_theme(self):
        """–ü–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç —Ç–µ–º—É –Ω–∞ –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω—É—é"""
        self._dark_mode = not self._dark_mode
        self._settings.setValue("dark_mode", self._dark_mode)
        self._apply_theme(self._dark_mode)
        self._update_theme_button()

    def _apply_theme(self, dark_mode):
        """–ü—Ä–∏–º–µ–Ω—è–µ—Ç —Ç–µ–º—É —á–µ—Ä–µ–∑ CSS"""
        theme_class = "dark-mode" if dark_mode else ""
        self.setProperty("class", theme_class)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∏–ª—å –¥–ª—è –≤—Å–µ—Ö –≤–∏–¥–∂–µ—Ç–æ–≤
        for widget in [self] + self.findChildren(QWidget):
            widget.style().unpolish(widget)
            widget.style().polish(widget)

    def _setup_connections(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤—Å–µ—Ö —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π"""
        if not hasattr(self, 'main_layout'):
            self.logger.error("MainLayout not initialized!")
            return
        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å–∏–≥–Ω–∞–ª–æ–≤ –æ—Ç layout
        self.main_layout.start_processing.connect(self._on_start_processing)
        self.main_layout.stop_processing.connect(self._on_stop_processing)
        self.main_layout.toggle_landmarks.connect(
            lambda state: self.video_processor.toggle_landmarks(state))
        self.main_layout.model_selected.connect(self._on_model_selected)
        self.main_layout.load_model_requested.connect(self._load_new_model)

        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å–∏–≥–Ω–∞–ª–æ–≤ –æ—Ç ModelHandler (–ò–°–ü–†–ê–í–õ–ï–ù–û)
        self.model_handler.model_loaded.connect(self._on_model_loaded)  # –¢–æ–ª—å–∫–æ –æ–¥–∏–Ω —Å–ª–æ—Ç
        self.model_handler.model_loading.connect(self._on_model_loading)
        self.model_handler.models_updated.connect(self._refresh_models_list)
        
        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å–∏–≥–Ω–∞–ª–æ–≤ –∫ layout
        self.video_processor.update_frame_signal.connect(
            self.main_layout.video_display.update_frame
        )
        self.video_processor.siz_status_changed.connect(
            self._update_siz_status
        )

        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏—Å—Ç–æ—á–Ω–∏–∫–æ–º –≤–∏–¥–µ–æ
        self.main_layout.control_panel.video_source_changed.connect(
            self._on_video_source_changed
        )
        self.video_processor.input_error.connect(
            self._on_input_error
        )
    
    @pyqtSlot()
    def _load_new_model(self):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–π –º–æ–¥–µ–ª–∏"""
        if self.model_handler.add_model_from_folder():
            models = self.model_handler.refresh_models_list()
            self.main_layout.refresh_models(models)
            self.statusBar().showMessage("–ú–æ–¥–µ–ª—å —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞", 3000)

    @pyqtSlot(str, int)
    def _on_video_source_changed(self, source: str, source_type: int):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏—Å—Ç–æ—á–Ω–∏–∫–∞ —Å —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º –∫–Ω–æ–ø–∫–æ–π"""
        if self.main_layout.control_panel.source_type.currentIndex() == 2:  # RTSP –ø–æ—Ç–æ–∫
            rtsp_data = self.main_layout.control_panel.get_current_rtsp()
            if rtsp_data:
                url = rtsp_data.get("url", "")
            if not source:
                self.main_layout.control_panel.set_start_button_enabled(False)
                return
            
        success = self.video_processor.set_video_source(source, source_type)
        self.main_layout.control_panel.set_start_button_enabled(success)
        
        if success:
            self.statusBar().showMessage(f"–ò—Å—Ç–æ—á–Ω–∏–∫ –≥–æ—Ç–æ–≤: {source}", 3000)
        else:
            self.statusBar().showMessage("–û—à–∏–±–∫–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ - –∏—Å–ø—Ä–∞–≤—å—Ç–µ –≤–≤–æ–¥", 3000)
            
    @pyqtSlot(str)
    def _on_input_error(self, error_msg):
        """–£–ª—É—á—à–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–∞—Ö"""
        QMessageBox.warning(self, "–û—à–∏–±–∫–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–∞", error_msg)
        self.statusBar().showMessage(error_msg, 5000)
        self.main_layout.control_panel.set_start_button_enabled(False)

    @pyqtSlot(bool)
    def _enable_start_button(self, enabled):
        """–ê–∫—Ç–∏–≤–∏—Ä—É–µ—Ç/–¥–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç –∫–Ω–æ–ø–∫—É Start"""
        self.main_layout.control_panel.set_start_button_enabled(enabled and self.current_model is not None)
           
    @pyqtSlot()
    def _on_start_processing(self):
        """–ó–∞–ø—É—Å–∫ –æ–±—Ä–∞–±–æ—Ç–∫–∏"""
        if not self.current_model:
            self.statusBar().showMessage("–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å!", 3000)
            return
            
        self.processing_active = True
        self.main_layout.set_processing_state(True)  # –ë–ª–æ–∫–∏—Ä—É–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã
        self.video_processor.start_processing()
        self.statusBar().showMessage("–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—É—â–µ–Ω–∞", 3000)

    @pyqtSlot()
    def _on_stop_processing(self):
        """–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏"""
        self.processing_active = False
        self.main_layout.set_processing_state(False)  # –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã
        self.video_processor.stop_processing()
        
        status_message = f"–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ | –ú–æ–¥–µ–ª—å: {self.current_model}"
        if self.current_siz_status is not None:
            status_message += f" | –°—Ç–∞—Ç—É—Å –°–ò–ó: {'OK' if self.current_siz_status else '–û—à–∏–±–∫–∞'}"
        self.statusBar().showMessage(status_message)

    @pyqtSlot()
    def _refresh_models_list(self):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç —Å–ø–∏—Å–æ–∫ –º–æ–¥–µ–ª–µ–π –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ"""
        try:
            # –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –º–æ–¥–µ–ª–µ–π
            models = self.model_handler.refresh_models_list()
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –≤—ã–ø–∞–¥–∞—é—â–∏–π —Å–ø–∏—Å–æ–∫ –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ
            self.main_layout.model_selector.refresh_models(models)
            
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ —Å—Ç–∞—Ç—É—Å-–±–∞—Ä–µ
            if models:
                self.statusBar().showMessage(f"–î–æ—Å—Ç—É–ø–Ω–æ –º–æ–¥–µ–ª–µ–π: {len(models)}", 3000)
            else:
                self.statusBar().showMessage("–ú–æ–¥–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã! –î–æ–±–∞–≤—å—Ç–µ –º–æ–¥–µ–ª—å —á–µ—Ä–µ–∑ –º–µ–Ω—é", 3000)
                self.main_layout.control_panel.set_start_button_enabled(False)
                
        except Exception as e:
            self.logger.error(f"–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –º–æ–¥–µ–ª–µ–π: {str(e)}")
            self.statusBar().showMessage("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–ø–∏—Å–∫–∞ –º–æ–¥–µ–ª–µ–π", 3000)

    @pyqtSlot(str)
    def _on_model_loading(self, model_name: str):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –º–æ–¥–µ–ª–∏"""
        self.statusBar().showMessage(f"–ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏ {model_name}...")

    @pyqtSlot(str, dict)
    def _on_model_loaded(self, model_name: str, model_info: dict):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥–µ–ª–∏"""
        if self.video_processor.load_model(model_name, model_info):
            self.current_model = model_name
            self.main_layout.control_panel.set_start_button_enabled(True)
            self.statusBar().showMessage(f"–ú–æ–¥–µ–ª—å '{model_name}' –≥–æ—Ç–æ–≤–∞", 3000)
        else:
            self.main_layout.control_panel.set_start_button_enabled(False)
            self.statusBar().showMessage(
                f"–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –º–æ–¥–µ–ª–∏ '{model_name}'",
                3000
            )

    @pyqtSlot(object)
    def _update_siz_status(self, status):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å-–±–∞—Ä–∞ —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–æ–π"""
        try:
            if status == "nothing":
                message = "–°–ò–ó: –Ω–∏—á–µ–≥–æ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ!"
            elif isinstance(status, list):
                if not status:  # –ü—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫
                    message = "–°–ò–ó: –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã"
                else:
                    message = "–°–ò–ó: –≤—Å–µ –Ω–∞ –º–µ—Å—Ç–∞—Ö" if all(status) else "–°–ò–ó: –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã –Ω–µ –≤—Å–µ –∏–ª–∏ –Ω–µ –Ω–∞ —Å–≤–æ–∏—Ö –º–µ—Å—Ç–∞—Ö!"
            else:
                message = "–°–ò–ó: –≤—Å–µ –Ω–∞ –º–µ—Å—Ç–∞—Ö" if status else "–°–ò–ó: –ø—Ä–æ–±–ª–µ–º—ã –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã..."
            
            base_message = f"–ú–æ–¥–µ–ª—å: {self.current_model} | " if hasattr(self, 'current_model') and self.current_model else ""
            self.statusBar().showMessage(base_message + message)
            
        except Exception as e:
            self.logger.error(f"Status update error: {str(e)}")
            self.statusBar().showMessage("–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞")

    @pyqtSlot(str)
    def _on_model_selected(self, model_name):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –º–æ–¥–µ–ª–∏"""
        self.main_layout.control_panel.set_start_button_enabled(False)
        if model_name and model_name != "–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π":
            self.model_handler.load_model(model_name)

    @pyqtSlot(bool)
    def _update_status_bar(self, detected):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –°–ò–ó"""
        self.current_siz_status = detected
        status = f"–ú–æ–¥–µ–ª—å: {self.current_model} | –°–ò–ó: {'–æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã' if detected else '–æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç!'}"
        self.statusBar().showMessage(status)
            
    def _load_initial_models(self):
        """–ó–∞–≥—Ä—É–∑–∫–∞ —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ"""
        models = self.model_handler.refresh_models_list()
        self.main_layout.model_selector.refresh_models(models)
        if models:
            self.statusBar().showMessage(f"–î–æ—Å—Ç—É–ø–Ω–æ –º–æ–¥–µ–ª–µ–π: {len(models)}", 3000)
        else:
            self.statusBar().showMessage("–ú–æ–¥–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!", 3000)

    def closeEvent(self, event):
        """–ì–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏"""
        self._on_stop_processing()  # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏
        self.video_processor.cleanup()  # –û—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤
        super().closeEvent(event)