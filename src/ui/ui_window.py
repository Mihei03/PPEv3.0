from PyQt6.QtWidgets import (QMainWindow, QVBoxLayout, QHBoxLayout, QWidget, QLabel, 
                            QComboBox, QPushButton, QCheckBox, QLineEdit, QMessageBox,
                            QFileDialog, QStatusBar)
from PyQt6.QtCore import Qt, pyqtSignal
from PyQt6.QtGui import QPixmap, QImage
from utils.logger import AppLogger
import os

class MainWindowUI(QMainWindow):
    # –°–∏–≥–Ω–∞–ª—ã
    start_processing = pyqtSignal()
    stop_processing = pyqtSignal()
    toggle_landmarks = pyqtSignal(bool)
    model_selected = pyqtSignal(str)
    load_model_requested = pyqtSignal()
    video_source_changed = pyqtSignal(str, int)
    rtsp_selected = pyqtSignal(str)
    add_rtsp_requested = pyqtSignal()

    def set_style_sheet(self, stylesheet):
        self.setStyleSheet(stylesheet)
        for child in self.findChildren(QWidget):
            child.setStyleSheet(stylesheet)

    def __init__(self, parent=None):
        super().__init__(parent)
        self._connections_initialized = False  # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∞—Ç—Ä–∏–±—É—Ç
        self._init_ui()
        self._connect_signals()
        self._setup_validation()

    def _init_ui(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –≤—Å–µ—Ö –∞—Ç—Ä–∏–±—É—Ç–æ–≤"""
        self.setWindowTitle("–°–∏—Å—Ç–µ–º–∞ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è –°–ò–ó")
        self.setGeometry(100, 100, 800, 600)
        
        # –ì–ª–∞–≤–Ω—ã–π –≤–∏–¥–∂–µ—Ç –∏ layout
        self.central_widget = QWidget()
        self.setCentralWidget(self.central_widget)
        self.main_layout = QVBoxLayout(self.central_widget)
        
        # 1. –í–∏–¥–µ–æ –¥–∏—Å–ø–ª–µ–π
        self._init_video_display()
        
        # 2. –ü–∞–Ω–µ–ª—å –≤—ã–±–æ—Ä–∞ –º–æ–¥–µ–ª–∏
        self._init_model_panel()
        
        # 3. –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        self._init_control_panel()
        
        # 4. –°—Ç–∞—Ç—É—Å –±–∞—Ä –∏ —Ç–µ–º–∞
        self._init_status_bar()
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–∏–¥–∏–º–æ—Å—Ç–∏ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
        self._update_source_type(0)
        
        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∏–ª–µ–π
        self._apply_initial_styles()

    def _init_video_display(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤–∏–¥–µ–æ –¥–∏—Å–ø–ª–µ—è"""
        self.video_display = QLabel()
        self.video_display.setAlignment(Qt.AlignmentFlag.AlignCenter)
        self.video_display.setMinimumSize(640, 480)
        self.video_display.setStyleSheet("background-color: black;")
        self.main_layout.addWidget(self.video_display)

    def _init_model_panel(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–∞–Ω–µ–ª–∏ –≤—ã–±–æ—Ä–∞ –º–æ–¥–µ–ª–∏"""
        self.model_panel = QWidget()
        model_layout = QHBoxLayout(self.model_panel)
        
        self.model_label = QLabel("–ú–æ–¥–µ–ª–∏:")
        self.model_combo = QComboBox()
        self.activate_model_btn = QPushButton("–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –º–æ–¥–µ–ª—å")
        self.add_model_btn = QPushButton("–î–æ–±–∞–≤–∏—Ç—å –º–æ–¥–µ–ª—å")
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–≤–æ–π—Å—Ç–≤
        self.model_label.setObjectName("modelLabel")
        self.activate_model_btn.setEnabled(False)
        
        model_layout.addWidget(self.model_label)
        model_layout.addWidget(self.model_combo)
        model_layout.addWidget(self.activate_model_btn)
        model_layout.addWidget(self.add_model_btn)
        
        self.main_layout.addWidget(self.model_panel)

    def _init_control_panel(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–∞–Ω–µ–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è"""
        self.control_panel = QWidget()
        control_layout = QHBoxLayout(self.control_panel)
        
        # –°–æ–∑–¥–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
        self.source_label = QLabel("–ò—Å—Ç–æ—á–Ω–∏–∫:")
        self.source_type = QComboBox()
        self.source_type.addItems(["–ö–∞–º–µ—Ä–∞", "–í–∏–¥–µ–æ—Ñ–∞–π–ª", "RTSP –ø–æ—Ç–æ–∫"])
        self.source_input = QLineEdit()
        self.browse_btn = QPushButton("–û–±–∑–æ—Ä")
        self.rtsp_combo = QComboBox()
        self.add_rtsp_btn = QPushButton("+")
        self.landmarks_check = QCheckBox("–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –∫–ª—é—á–µ–≤—ã–µ —Ç–æ—á–∫–∏")
        self.start_btn = QPushButton("Start")
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–≤–æ–π—Å—Ç–≤
        self.source_input.setPlaceholderText("–í–≤–µ–¥–∏—Ç–µ –∏–Ω–¥–µ–∫—Å –∫–∞–º–µ—Ä—ã (0, 1, ...)")
        self.add_rtsp_btn.setFixedWidth(30)
        self.landmarks_check.setChecked(True)
        self.start_btn.setObjectName("startButton")
        self.start_btn.setEnabled(False)
        
        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ layout
        control_layout.addWidget(self.source_label)
        control_layout.addWidget(self.source_type)
        control_layout.addWidget(self.source_input)
        control_layout.addWidget(self.browse_btn)
        control_layout.addWidget(self.rtsp_combo)
        control_layout.addWidget(self.add_rtsp_btn)
        control_layout.addWidget(self.landmarks_check)
        control_layout.addWidget(self.start_btn)
        
        self.main_layout.addWidget(self.control_panel)

    def _init_status_bar(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç–∞—Ç—É—Å –±–∞—Ä–∞ –∏ –∫–Ω–æ–ø–∫–∏ —Ç–µ–º—ã"""
        self.status_bar = QStatusBar()
        self.setStatusBar(self.status_bar)
        
        self.theme_btn = QPushButton()
        self.theme_btn.setObjectName("themeButton")
        self.status_bar.addPermanentWidget(self.theme_btn)

    def _apply_initial_styles(self):
        """–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –Ω–∞—á–∞–ª—å–Ω—ã—Ö —Å—Ç–∏–ª–µ–π"""
        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ –∫–Ω–æ–ø–∫–∏ —Ç–µ–º—ã
        self.theme_btn.setText("üåô")
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ—Ç—Å—Ç—É–ø–æ–≤
        self.main_layout.setContentsMargins(10, 10, 10, 10)
        self.main_layout.setSpacing(10)

    def _setup_validation(self):
        """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –≤–∞–ª–∏–¥–∞—Ü–∏—é –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª–µ–π –≤–≤–æ–¥–∞"""
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º —Å–∏–≥–Ω–∞–ª—ã –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞
        self.source_input.textChanged.connect(self._validate_current_input)
        self.source_type.currentIndexChanged.connect(self._update_validation)
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –≤–∞–ª–∏–¥–∞—Ü–∏—é
        self._update_validation()

    def _update_validation(self):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç —Ç–∏–ø –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ç–∏–ø–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–∞"""
        self._validate_current_input(self.source_input.text())

    def _validate_current_input(self, text):
        """–í–∞–ª–∏–¥–∏—Ä—É–µ—Ç —Ç–µ–∫—É—â–∏–π –≤–≤–æ–¥ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞"""
        source_type = self.source_type.currentIndex()
        text = text.strip()
        
        try:
            if source_type == 0:  # –ö–∞–º–µ—Ä–∞
                is_valid, tooltip = self._validate_camera(text)
            elif source_type == 1:  # –í–∏–¥–µ–æ—Ñ–∞–π–ª
                is_valid, tooltip = self._validate_video(text)
            elif source_type == 2:  # RTSP
                is_valid, tooltip = self._validate_rtsp(text)
            else:
                is_valid, tooltip = False, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø –∏—Å—Ç–æ—á–Ω–∏–∫–∞"
        except Exception as e:
            is_valid, tooltip = False, f"–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏: {str(e)}"
        
        self.source_input.setToolTip(tooltip)
        self._set_input_validity(is_valid)
        

    def _validate_camera(self, text):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –∏–Ω–¥–µ–∫—Å–∞ –∫–∞–º–µ—Ä—ã"""
        try:
            index = int(text)
            valid = index >= 0
            tooltip = "–í–∞–ª–∏–¥–Ω—ã–π –∏–Ω–¥–µ–∫—Å –∫–∞–º–µ—Ä—ã" if valid else "–ò–Ω–¥–µ–∫—Å –∫–∞–º–µ—Ä—ã –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å ‚â• 0"
            return valid, tooltip
        except ValueError:
            return False, "–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ–≤–æ–π –∏–Ω–¥–µ–∫—Å –∫–∞–º–µ—Ä—ã (0, 1, ...)"

    def _validate_video(self, text):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –ø—É—Ç–∏ –∫ –≤–∏–¥–µ–æ—Ñ–∞–π–ª—É"""
        if not text:
            return False, "–í–≤–µ–¥–∏—Ç–µ –ø—É—Ç—å –∫ –≤–∏–¥–µ–æ—Ñ–∞–π–ª—É"
        
        valid = text.lower().endswith(('.mp4', '.avi', '.mov', '.mkv'))
        if not valid:
            return False, "–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã: .mp4, .avi, .mov, .mkv"
        
        exists = os.path.exists(text)
        return exists, "–§–∞–π–ª –Ω–∞–π–¥–µ–Ω" if exists else "–§–∞–π–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"

    def _validate_rtsp(self, text):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å RTSP URL"""
        if not text:
            return False, "–í–≤–µ–¥–∏—Ç–µ RTSP URL"
        
        valid = text.startswith('rtsp://') and len(text) > 10
        return valid, "–í–∞–ª–∏–¥–Ω—ã–π RTSP URL" if valid else "URL –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å rtsp:// –∏ –±—ã—Ç—å –¥–ª–∏–Ω–Ω–µ–µ 10 —Å–∏–º–≤–æ–ª–æ–≤"

    def _set_input_validity(self, is_valid):
        """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å—Ç–∏–ª—å –ø–æ–ª—è –≤–≤–æ–¥–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏"""
        try:
            self.source_input.setProperty("valid", str(is_valid).lower())
            self.source_input.style().unpolish(self.source_input)
            self.source_input.style().polish(self.source_input)
            self.source_input.update()
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∏–ª—è: {e}")

    def update_theme(self, dark_mode):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–µ–º—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
        try:
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–ª–∏ —É–¥–∞–ª—è–µ–º –∫–ª–∞—Å—Å dark-mode –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –æ–∫–Ω–∞
            if dark_mode:
                self.setProperty("class", "dark-mode")
            else:
                self.setProperty("class", "")
                
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –≤—Å–µ—Ö –¥–æ—á–µ—Ä–Ω–∏—Ö –≤–∏–¥–∂–µ—Ç–æ–≤
            for child in self.findChildren(QWidget):
                child.style().unpolish(child)
                child.style().polish(child)
                child.update()
                
        except Exception as e:
            AppLogger.get_logger().error(f"–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–µ–º—ã: {str(e)}")
            
    def _connect_signals(self):
        if not self._connections_initialized:
            # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏
            self.activate_model_btn.clicked.connect(
            lambda: self.model_selected.emit(self.model_combo.currentText())
        )
            
            # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –º–æ–¥–µ–ª–∏ —Ç–æ–ª—å–∫–æ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –≤—ã–±–æ—Ä–∞
            self.model_combo.currentTextChanged.connect(self._update_current_model)
            
            self._connections_initialized = True

        self.source_type.currentIndexChanged.connect(self._update_source_type)
        self.browse_btn.clicked.connect(self._browse_file_ui)
        self.add_model_btn.clicked.connect(self.load_model_requested.emit)
        
        
        self.landmarks_check.stateChanged.connect(lambda state: self.toggle_landmarks.emit(state == Qt.CheckState.Checked.value))
        self.add_rtsp_btn.clicked.connect(self.add_rtsp_requested.emit)
        self.rtsp_combo.currentTextChanged.connect(self.rtsp_selected.emit)
    
    def _update_current_model(self, model_name):
        """–¢–æ–ª—å–∫–æ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ç–µ–∫—É—â–∏–π –≤—ã–±–æ—Ä, –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç"""
        self._current_model_name = model_name

    def _activate_model(self):
        """–ê–∫—Ç–∏–≤–∞—Ü–∏—è —Ç–æ–ª—å–∫–æ –ø–æ –∫–Ω–æ–ø–∫–µ"""
        if hasattr(self, '_current_model_name'):
            self.model_selected.emit(self._current_model_name)

    def _update_source_type(self, index):
        placeholders = [
            "–í–≤–µ–¥–∏—Ç–µ –∏–Ω–¥–µ–∫—Å –∫–∞–º–µ—Ä—ã (0, 1, ...)",
            "–í–≤–µ–¥–∏—Ç–µ –ø—É—Ç—å –∫ –≤–∏–¥–µ–æ—Ñ–∞–π–ª—É",
            "–í–≤–µ–¥–∏—Ç–µ RTSP URL (rtsp://...)"
        ]
        self.source_input.setPlaceholderText(placeholders[index])
        
        is_file = index == 1
        is_rtsp = index == 2
        
        self.browse_btn.setVisible(is_file)
        self.rtsp_combo.setVisible(is_rtsp)
        self.add_rtsp_btn.setVisible(is_rtsp)
        self.source_input.setVisible(not is_rtsp)
        
        if index == 0:
            self.source_input.setText("0")

    def _browse_file_ui(self):
        """–¢–æ–ª—å–∫–æ –æ—Ç–∫—Ä—ã—Ç–∏–µ –¥–∏–∞–ª–æ–≥–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–µ–∫—Å—Ç–∞"""
        if self.source_type.currentIndex() == 1:  # –¢–æ–ª—å–∫–æ –¥–ª—è –≤–∏–¥–µ–æ—Ñ–∞–π–ª–æ–≤
            file_path, _ = QFileDialog.getOpenFileName(
                self,
                "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∏–¥–µ–æ—Ñ–∞–π–ª",
                "",
                "Video Files (*.mp4 *.avi *.mov *.mkv)"
            )
            if file_path:
                self.source_input.setText(file_path)

    def update_frame(self, q_image):
        self.video_display.setPixmap(QPixmap.fromImage(q_image))
        
    def show_message(self, message, timeout=0):
        self.status_bar.showMessage(message, timeout)
        
    def show_warning(self, title, message):
        QMessageBox.warning(self, title, message)